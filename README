101. Express Basado en clases

- Se crearan por clases, muy importante tener en cuenta que las clases se trabajan con el constructor
- Se creo el Enpoint IP, e igual se sirvieron los archivos para que se pueda escuchar el puerto 8080
- Usualmente las propiedades se declaran en el Contructor

106. Peticiones HTTP GET PUT POST DELETE

- Estos son 4 Enpoints, si se hace mantenimiento de un app web

108. C odigos de respuesta HTTP en Express 

- Los estatus 400 tienen que er de parte del frontend 
- Los status 500 tienes que ver de parte el Backend


109. Cors - Middleware 

- Cors - Esto permite que tenga un acceso controlado para demas paginas web 

110. Separar rutas y el controlador de clases 

- Primero separamos las rutas en un archivo Routes, para asi tener una manera mas ordenada en el codigo 
- utilizamos la funcion de express {Router} para desestructurar 

111. Obtener datos de un POST

- en este caso, nos dirijimos a Postman llamamos el post y seguido tomamos la opcion Body > Raw > Text > JSON
- Esto con el fin de dejas un objeto, y que se pueda rescibir con el metodo POST 

112. Parametro de segmento y query 

- En express ya viene copnfigurado ID, viene parceado y lo otroga en una propiedad del objeto Reques llamado params
- Una manera de trabajar con los request, es con la desestructuracion

Seccion 9 

120. - Definir los alcances de nuestro RESTserver
- CRUD
- Encriptacion de contrase単as 
- Validaciones Personalizadas
- Creacion de roles 
- Conexiones a MLAB
- Desplique de base de datos en la nube
- Conexion de robot 3T con base de datos en la nube
- Configuraion de variables de entorno
- Borrado de archivos, Eliminado fisico de la base de datos, Eliminacion por estado en un  campo de la coleccion 

121. Alcance del proyecto 

- Base de datos con 3 tablas, Crear ID aquto matico en todas las tablas, contrase単a encriptada, integraciones con la api de google

124. Mongoose 

- Es un ODM es un modelador de objetos de informacion que vamos a grabar en nuestra base de datos, lo que nos puede brindar es Inserciones lecturas querys, hacer Query inyection.

125. Modelo de usuario 

- Crear mi modelo de usuario

126. POST: Creando un usuario en la coleccion 

- Se le da el Nombre Usuario para poder hacer la instancia y no confundirse con la constante 

127. BcryptJS - Encriptando la contrase単a 

- Para encriptar la contrase単a necesitamos el paquete bcriptjs
- Para hacer la encriptacion, se debe generar primero el SaltSync, esto es el numero de vueltas para hacer mas complicado 
la encriptacion, con el salt ya se puede hacer el hash buscando nuestro usuario, el hash es para encriptar en una sola via. 

128. Validar campos obligatorios - email 

- Tenemos un paquete muy eficaz, que se llama express-vaidator 
- Express-validator es una gran coleccion de middlewares, que para recordar que es middleware es una funcion que se ejecuta antes de llamar un controlador o seguir con la ejecucion de mis peticiones. 